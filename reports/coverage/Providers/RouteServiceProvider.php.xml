<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="RouteServiceProvider.php" path="\Providers">
    <totals>
      <lines total="63" comments="25" code="38" executable="15" executed="14" percent="93.33"/>
      <methods count="2" tested="1" percent="50.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="0" percent="0.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="App\Providers\RouteServiceProvider" start="11" executable="15" executed="14" crap="3">
      <namespace name="App\Providers"/>
      <method name="boot" signature="boot()" start="36" end="50" crap="1" executable="11" executed="11" coverage="100"/>
      <method name="configureRateLimiting" signature="configureRateLimiting()" start="57" end="62" crap="2.06" executable="4" executed="3" coverage="75"/>
    </class>
    <coverage>
      <line nr="38">
        <covered by="Tests\Feature\AuthenticationTest::test_login_screen_can_be_rendered"/>
        <covered by="Tests\Feature\AuthenticationTest::test_users_can_authenticate_using_the_login_screen"/>
        <covered by="Tests\Feature\AuthenticationTest::test_users_can_not_authenticate_with_invalid_password"/>
        <covered by="Tests\Feature\CustomerTest::test_example"/>
        <covered by="Tests\Feature\EmailVerificationTest::test_email_verification_screen_can_be_rendered"/>
        <covered by="Tests\Feature\EmailVerificationTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\EmailVerificationTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\ExampleTest::test_api"/>
        <covered by="Tests\Feature\PasswordConfirmationTest::test_confirm_password_screen_can_be_rendered"/>
        <covered by="Tests\Feature\PasswordConfirmationTest::test_password_can_be_confirmed"/>
        <covered by="Tests\Feature\PasswordConfirmationTest::test_password_is_not_confirmed_with_invalid_password"/>
        <covered by="Tests\Feature\PasswordResetTest::test_reset_password_link_screen_can_be_rendered"/>
        <covered by="Tests\Feature\PasswordResetTest::test_reset_password_link_can_be_requested"/>
        <covered by="Tests\Feature\PasswordResetTest::test_reset_password_screen_can_be_rendered"/>
        <covered by="Tests\Feature\PasswordResetTest::test_password_can_be_reset_with_valid_token"/>
        <covered by="Tests\Feature\RegistrationTest::test_registration_screen_can_be_rendered"/>
        <covered by="Tests\Feature\RegistrationTest::test_new_users_can_register"/>
      </line>
      <line nr="40">
        <covered by="Tests\Feature\AuthenticationTest::test_login_screen_can_be_rendered"/>
        <covered by="Tests\Feature\AuthenticationTest::test_users_can_authenticate_using_the_login_screen"/>
        <covered by="Tests\Feature\AuthenticationTest::test_users_can_not_authenticate_with_invalid_password"/>
        <covered by="Tests\Feature\CustomerTest::test_example"/>
        <covered by="Tests\Feature\EmailVerificationTest::test_email_verification_screen_can_be_rendered"/>
        <covered by="Tests\Feature\EmailVerificationTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\EmailVerificationTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\ExampleTest::test_api"/>
        <covered by="Tests\Feature\PasswordConfirmationTest::test_confirm_password_screen_can_be_rendered"/>
        <covered by="Tests\Feature\PasswordConfirmationTest::test_password_can_be_confirmed"/>
        <covered by="Tests\Feature\PasswordConfirmationTest::test_password_is_not_confirmed_with_invalid_password"/>
        <covered by="Tests\Feature\PasswordResetTest::test_reset_password_link_screen_can_be_rendered"/>
        <covered by="Tests\Feature\PasswordResetTest::test_reset_password_link_can_be_requested"/>
        <covered by="Tests\Feature\PasswordResetTest::test_reset_password_screen_can_be_rendered"/>
        <covered by="Tests\Feature\PasswordResetTest::test_password_can_be_reset_with_valid_token"/>
        <covered by="Tests\Feature\RegistrationTest::test_registration_screen_can_be_rendered"/>
        <covered by="Tests\Feature\RegistrationTest::test_new_users_can_register"/>
      </line>
      <line nr="41">
        <covered by="Tests\Feature\AuthenticationTest::test_login_screen_can_be_rendered"/>
        <covered by="Tests\Feature\AuthenticationTest::test_users_can_authenticate_using_the_login_screen"/>
        <covered by="Tests\Feature\AuthenticationTest::test_users_can_not_authenticate_with_invalid_password"/>
        <covered by="Tests\Feature\CustomerTest::test_example"/>
        <covered by="Tests\Feature\EmailVerificationTest::test_email_verification_screen_can_be_rendered"/>
        <covered by="Tests\Feature\EmailVerificationTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\EmailVerificationTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\ExampleTest::test_api"/>
        <covered by="Tests\Feature\PasswordConfirmationTest::test_confirm_password_screen_can_be_rendered"/>
        <covered by="Tests\Feature\PasswordConfirmationTest::test_password_can_be_confirmed"/>
        <covered by="Tests\Feature\PasswordConfirmationTest::test_password_is_not_confirmed_with_invalid_password"/>
        <covered by="Tests\Feature\PasswordResetTest::test_reset_password_link_screen_can_be_rendered"/>
        <covered by="Tests\Feature\PasswordResetTest::test_reset_password_link_can_be_requested"/>
        <covered by="Tests\Feature\PasswordResetTest::test_reset_password_screen_can_be_rendered"/>
        <covered by="Tests\Feature\PasswordResetTest::test_password_can_be_reset_with_valid_token"/>
        <covered by="Tests\Feature\RegistrationTest::test_registration_screen_can_be_rendered"/>
        <covered by="Tests\Feature\RegistrationTest::test_new_users_can_register"/>
      </line>
      <line nr="42">
        <covered by="Tests\Feature\AuthenticationTest::test_login_screen_can_be_rendered"/>
        <covered by="Tests\Feature\AuthenticationTest::test_users_can_authenticate_using_the_login_screen"/>
        <covered by="Tests\Feature\AuthenticationTest::test_users_can_not_authenticate_with_invalid_password"/>
        <covered by="Tests\Feature\CustomerTest::test_example"/>
        <covered by="Tests\Feature\EmailVerificationTest::test_email_verification_screen_can_be_rendered"/>
        <covered by="Tests\Feature\EmailVerificationTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\EmailVerificationTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\ExampleTest::test_api"/>
        <covered by="Tests\Feature\PasswordConfirmationTest::test_confirm_password_screen_can_be_rendered"/>
        <covered by="Tests\Feature\PasswordConfirmationTest::test_password_can_be_confirmed"/>
        <covered by="Tests\Feature\PasswordConfirmationTest::test_password_is_not_confirmed_with_invalid_password"/>
        <covered by="Tests\Feature\PasswordResetTest::test_reset_password_link_screen_can_be_rendered"/>
        <covered by="Tests\Feature\PasswordResetTest::test_reset_password_link_can_be_requested"/>
        <covered by="Tests\Feature\PasswordResetTest::test_reset_password_screen_can_be_rendered"/>
        <covered by="Tests\Feature\PasswordResetTest::test_password_can_be_reset_with_valid_token"/>
        <covered by="Tests\Feature\RegistrationTest::test_registration_screen_can_be_rendered"/>
        <covered by="Tests\Feature\RegistrationTest::test_new_users_can_register"/>
      </line>
      <line nr="43">
        <covered by="Tests\Feature\AuthenticationTest::test_login_screen_can_be_rendered"/>
        <covered by="Tests\Feature\AuthenticationTest::test_users_can_authenticate_using_the_login_screen"/>
        <covered by="Tests\Feature\AuthenticationTest::test_users_can_not_authenticate_with_invalid_password"/>
        <covered by="Tests\Feature\CustomerTest::test_example"/>
        <covered by="Tests\Feature\EmailVerificationTest::test_email_verification_screen_can_be_rendered"/>
        <covered by="Tests\Feature\EmailVerificationTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\EmailVerificationTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\ExampleTest::test_api"/>
        <covered by="Tests\Feature\PasswordConfirmationTest::test_confirm_password_screen_can_be_rendered"/>
        <covered by="Tests\Feature\PasswordConfirmationTest::test_password_can_be_confirmed"/>
        <covered by="Tests\Feature\PasswordConfirmationTest::test_password_is_not_confirmed_with_invalid_password"/>
        <covered by="Tests\Feature\PasswordResetTest::test_reset_password_link_screen_can_be_rendered"/>
        <covered by="Tests\Feature\PasswordResetTest::test_reset_password_link_can_be_requested"/>
        <covered by="Tests\Feature\PasswordResetTest::test_reset_password_screen_can_be_rendered"/>
        <covered by="Tests\Feature\PasswordResetTest::test_password_can_be_reset_with_valid_token"/>
        <covered by="Tests\Feature\RegistrationTest::test_registration_screen_can_be_rendered"/>
        <covered by="Tests\Feature\RegistrationTest::test_new_users_can_register"/>
      </line>
      <line nr="44">
        <covered by="Tests\Feature\AuthenticationTest::test_login_screen_can_be_rendered"/>
        <covered by="Tests\Feature\AuthenticationTest::test_users_can_authenticate_using_the_login_screen"/>
        <covered by="Tests\Feature\AuthenticationTest::test_users_can_not_authenticate_with_invalid_password"/>
        <covered by="Tests\Feature\CustomerTest::test_example"/>
        <covered by="Tests\Feature\EmailVerificationTest::test_email_verification_screen_can_be_rendered"/>
        <covered by="Tests\Feature\EmailVerificationTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\EmailVerificationTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\ExampleTest::test_api"/>
        <covered by="Tests\Feature\PasswordConfirmationTest::test_confirm_password_screen_can_be_rendered"/>
        <covered by="Tests\Feature\PasswordConfirmationTest::test_password_can_be_confirmed"/>
        <covered by="Tests\Feature\PasswordConfirmationTest::test_password_is_not_confirmed_with_invalid_password"/>
        <covered by="Tests\Feature\PasswordResetTest::test_reset_password_link_screen_can_be_rendered"/>
        <covered by="Tests\Feature\PasswordResetTest::test_reset_password_link_can_be_requested"/>
        <covered by="Tests\Feature\PasswordResetTest::test_reset_password_screen_can_be_rendered"/>
        <covered by="Tests\Feature\PasswordResetTest::test_password_can_be_reset_with_valid_token"/>
        <covered by="Tests\Feature\RegistrationTest::test_registration_screen_can_be_rendered"/>
        <covered by="Tests\Feature\RegistrationTest::test_new_users_can_register"/>
      </line>
      <line nr="46">
        <covered by="Tests\Feature\AuthenticationTest::test_login_screen_can_be_rendered"/>
        <covered by="Tests\Feature\AuthenticationTest::test_users_can_authenticate_using_the_login_screen"/>
        <covered by="Tests\Feature\AuthenticationTest::test_users_can_not_authenticate_with_invalid_password"/>
        <covered by="Tests\Feature\CustomerTest::test_example"/>
        <covered by="Tests\Feature\EmailVerificationTest::test_email_verification_screen_can_be_rendered"/>
        <covered by="Tests\Feature\EmailVerificationTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\EmailVerificationTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\ExampleTest::test_api"/>
        <covered by="Tests\Feature\PasswordConfirmationTest::test_confirm_password_screen_can_be_rendered"/>
        <covered by="Tests\Feature\PasswordConfirmationTest::test_password_can_be_confirmed"/>
        <covered by="Tests\Feature\PasswordConfirmationTest::test_password_is_not_confirmed_with_invalid_password"/>
        <covered by="Tests\Feature\PasswordResetTest::test_reset_password_link_screen_can_be_rendered"/>
        <covered by="Tests\Feature\PasswordResetTest::test_reset_password_link_can_be_requested"/>
        <covered by="Tests\Feature\PasswordResetTest::test_reset_password_screen_can_be_rendered"/>
        <covered by="Tests\Feature\PasswordResetTest::test_password_can_be_reset_with_valid_token"/>
        <covered by="Tests\Feature\RegistrationTest::test_registration_screen_can_be_rendered"/>
        <covered by="Tests\Feature\RegistrationTest::test_new_users_can_register"/>
      </line>
      <line nr="47">
        <covered by="Tests\Feature\AuthenticationTest::test_login_screen_can_be_rendered"/>
        <covered by="Tests\Feature\AuthenticationTest::test_users_can_authenticate_using_the_login_screen"/>
        <covered by="Tests\Feature\AuthenticationTest::test_users_can_not_authenticate_with_invalid_password"/>
        <covered by="Tests\Feature\CustomerTest::test_example"/>
        <covered by="Tests\Feature\EmailVerificationTest::test_email_verification_screen_can_be_rendered"/>
        <covered by="Tests\Feature\EmailVerificationTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\EmailVerificationTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\ExampleTest::test_api"/>
        <covered by="Tests\Feature\PasswordConfirmationTest::test_confirm_password_screen_can_be_rendered"/>
        <covered by="Tests\Feature\PasswordConfirmationTest::test_password_can_be_confirmed"/>
        <covered by="Tests\Feature\PasswordConfirmationTest::test_password_is_not_confirmed_with_invalid_password"/>
        <covered by="Tests\Feature\PasswordResetTest::test_reset_password_link_screen_can_be_rendered"/>
        <covered by="Tests\Feature\PasswordResetTest::test_reset_password_link_can_be_requested"/>
        <covered by="Tests\Feature\PasswordResetTest::test_reset_password_screen_can_be_rendered"/>
        <covered by="Tests\Feature\PasswordResetTest::test_password_can_be_reset_with_valid_token"/>
        <covered by="Tests\Feature\RegistrationTest::test_registration_screen_can_be_rendered"/>
        <covered by="Tests\Feature\RegistrationTest::test_new_users_can_register"/>
      </line>
      <line nr="48">
        <covered by="Tests\Feature\AuthenticationTest::test_login_screen_can_be_rendered"/>
        <covered by="Tests\Feature\AuthenticationTest::test_users_can_authenticate_using_the_login_screen"/>
        <covered by="Tests\Feature\AuthenticationTest::test_users_can_not_authenticate_with_invalid_password"/>
        <covered by="Tests\Feature\CustomerTest::test_example"/>
        <covered by="Tests\Feature\EmailVerificationTest::test_email_verification_screen_can_be_rendered"/>
        <covered by="Tests\Feature\EmailVerificationTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\EmailVerificationTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\ExampleTest::test_api"/>
        <covered by="Tests\Feature\PasswordConfirmationTest::test_confirm_password_screen_can_be_rendered"/>
        <covered by="Tests\Feature\PasswordConfirmationTest::test_password_can_be_confirmed"/>
        <covered by="Tests\Feature\PasswordConfirmationTest::test_password_is_not_confirmed_with_invalid_password"/>
        <covered by="Tests\Feature\PasswordResetTest::test_reset_password_link_screen_can_be_rendered"/>
        <covered by="Tests\Feature\PasswordResetTest::test_reset_password_link_can_be_requested"/>
        <covered by="Tests\Feature\PasswordResetTest::test_reset_password_screen_can_be_rendered"/>
        <covered by="Tests\Feature\PasswordResetTest::test_password_can_be_reset_with_valid_token"/>
        <covered by="Tests\Feature\RegistrationTest::test_registration_screen_can_be_rendered"/>
        <covered by="Tests\Feature\RegistrationTest::test_new_users_can_register"/>
      </line>
      <line nr="49">
        <covered by="Tests\Feature\AuthenticationTest::test_login_screen_can_be_rendered"/>
        <covered by="Tests\Feature\AuthenticationTest::test_users_can_authenticate_using_the_login_screen"/>
        <covered by="Tests\Feature\AuthenticationTest::test_users_can_not_authenticate_with_invalid_password"/>
        <covered by="Tests\Feature\CustomerTest::test_example"/>
        <covered by="Tests\Feature\EmailVerificationTest::test_email_verification_screen_can_be_rendered"/>
        <covered by="Tests\Feature\EmailVerificationTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\EmailVerificationTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\ExampleTest::test_api"/>
        <covered by="Tests\Feature\PasswordConfirmationTest::test_confirm_password_screen_can_be_rendered"/>
        <covered by="Tests\Feature\PasswordConfirmationTest::test_password_can_be_confirmed"/>
        <covered by="Tests\Feature\PasswordConfirmationTest::test_password_is_not_confirmed_with_invalid_password"/>
        <covered by="Tests\Feature\PasswordResetTest::test_reset_password_link_screen_can_be_rendered"/>
        <covered by="Tests\Feature\PasswordResetTest::test_reset_password_link_can_be_requested"/>
        <covered by="Tests\Feature\PasswordResetTest::test_reset_password_screen_can_be_rendered"/>
        <covered by="Tests\Feature\PasswordResetTest::test_password_can_be_reset_with_valid_token"/>
        <covered by="Tests\Feature\RegistrationTest::test_registration_screen_can_be_rendered"/>
        <covered by="Tests\Feature\RegistrationTest::test_new_users_can_register"/>
      </line>
      <line nr="50">
        <covered by="Tests\Feature\AuthenticationTest::test_login_screen_can_be_rendered"/>
        <covered by="Tests\Feature\AuthenticationTest::test_users_can_authenticate_using_the_login_screen"/>
        <covered by="Tests\Feature\AuthenticationTest::test_users_can_not_authenticate_with_invalid_password"/>
        <covered by="Tests\Feature\CustomerTest::test_example"/>
        <covered by="Tests\Feature\EmailVerificationTest::test_email_verification_screen_can_be_rendered"/>
        <covered by="Tests\Feature\EmailVerificationTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\EmailVerificationTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\ExampleTest::test_api"/>
        <covered by="Tests\Feature\PasswordConfirmationTest::test_confirm_password_screen_can_be_rendered"/>
        <covered by="Tests\Feature\PasswordConfirmationTest::test_password_can_be_confirmed"/>
        <covered by="Tests\Feature\PasswordConfirmationTest::test_password_is_not_confirmed_with_invalid_password"/>
        <covered by="Tests\Feature\PasswordResetTest::test_reset_password_link_screen_can_be_rendered"/>
        <covered by="Tests\Feature\PasswordResetTest::test_reset_password_link_can_be_requested"/>
        <covered by="Tests\Feature\PasswordResetTest::test_reset_password_screen_can_be_rendered"/>
        <covered by="Tests\Feature\PasswordResetTest::test_password_can_be_reset_with_valid_token"/>
        <covered by="Tests\Feature\RegistrationTest::test_registration_screen_can_be_rendered"/>
        <covered by="Tests\Feature\RegistrationTest::test_new_users_can_register"/>
      </line>
      <line nr="59">
        <covered by="Tests\Feature\AuthenticationTest::test_login_screen_can_be_rendered"/>
        <covered by="Tests\Feature\AuthenticationTest::test_users_can_authenticate_using_the_login_screen"/>
        <covered by="Tests\Feature\AuthenticationTest::test_users_can_not_authenticate_with_invalid_password"/>
        <covered by="Tests\Feature\CustomerTest::test_example"/>
        <covered by="Tests\Feature\EmailVerificationTest::test_email_verification_screen_can_be_rendered"/>
        <covered by="Tests\Feature\EmailVerificationTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\EmailVerificationTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\ExampleTest::test_api"/>
        <covered by="Tests\Feature\PasswordConfirmationTest::test_confirm_password_screen_can_be_rendered"/>
        <covered by="Tests\Feature\PasswordConfirmationTest::test_password_can_be_confirmed"/>
        <covered by="Tests\Feature\PasswordConfirmationTest::test_password_is_not_confirmed_with_invalid_password"/>
        <covered by="Tests\Feature\PasswordResetTest::test_reset_password_link_screen_can_be_rendered"/>
        <covered by="Tests\Feature\PasswordResetTest::test_reset_password_link_can_be_requested"/>
        <covered by="Tests\Feature\PasswordResetTest::test_reset_password_screen_can_be_rendered"/>
        <covered by="Tests\Feature\PasswordResetTest::test_password_can_be_reset_with_valid_token"/>
        <covered by="Tests\Feature\RegistrationTest::test_registration_screen_can_be_rendered"/>
        <covered by="Tests\Feature\RegistrationTest::test_new_users_can_register"/>
      </line>
      <line nr="61">
        <covered by="Tests\Feature\AuthenticationTest::test_login_screen_can_be_rendered"/>
        <covered by="Tests\Feature\AuthenticationTest::test_users_can_authenticate_using_the_login_screen"/>
        <covered by="Tests\Feature\AuthenticationTest::test_users_can_not_authenticate_with_invalid_password"/>
        <covered by="Tests\Feature\CustomerTest::test_example"/>
        <covered by="Tests\Feature\EmailVerificationTest::test_email_verification_screen_can_be_rendered"/>
        <covered by="Tests\Feature\EmailVerificationTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\EmailVerificationTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\ExampleTest::test_api"/>
        <covered by="Tests\Feature\PasswordConfirmationTest::test_confirm_password_screen_can_be_rendered"/>
        <covered by="Tests\Feature\PasswordConfirmationTest::test_password_can_be_confirmed"/>
        <covered by="Tests\Feature\PasswordConfirmationTest::test_password_is_not_confirmed_with_invalid_password"/>
        <covered by="Tests\Feature\PasswordResetTest::test_reset_password_link_screen_can_be_rendered"/>
        <covered by="Tests\Feature\PasswordResetTest::test_reset_password_link_can_be_requested"/>
        <covered by="Tests\Feature\PasswordResetTest::test_reset_password_screen_can_be_rendered"/>
        <covered by="Tests\Feature\PasswordResetTest::test_password_can_be_reset_with_valid_token"/>
        <covered by="Tests\Feature\RegistrationTest::test_registration_screen_can_be_rendered"/>
        <covered by="Tests\Feature\RegistrationTest::test_new_users_can_register"/>
      </line>
      <line nr="62">
        <covered by="Tests\Feature\AuthenticationTest::test_login_screen_can_be_rendered"/>
        <covered by="Tests\Feature\AuthenticationTest::test_users_can_authenticate_using_the_login_screen"/>
        <covered by="Tests\Feature\AuthenticationTest::test_users_can_not_authenticate_with_invalid_password"/>
        <covered by="Tests\Feature\CustomerTest::test_example"/>
        <covered by="Tests\Feature\EmailVerificationTest::test_email_verification_screen_can_be_rendered"/>
        <covered by="Tests\Feature\EmailVerificationTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\EmailVerificationTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\ExampleTest::test_api"/>
        <covered by="Tests\Feature\PasswordConfirmationTest::test_confirm_password_screen_can_be_rendered"/>
        <covered by="Tests\Feature\PasswordConfirmationTest::test_password_can_be_confirmed"/>
        <covered by="Tests\Feature\PasswordConfirmationTest::test_password_is_not_confirmed_with_invalid_password"/>
        <covered by="Tests\Feature\PasswordResetTest::test_reset_password_link_screen_can_be_rendered"/>
        <covered by="Tests\Feature\PasswordResetTest::test_reset_password_link_can_be_requested"/>
        <covered by="Tests\Feature\PasswordResetTest::test_reset_password_screen_can_be_rendered"/>
        <covered by="Tests\Feature\PasswordResetTest::test_password_can_be_reset_with_valid_token"/>
        <covered by="Tests\Feature\RegistrationTest::test_registration_screen_can_be_rendered"/>
        <covered by="Tests\Feature\RegistrationTest::test_new_users_can_register"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">App</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Providers</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Illuminate</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Cache</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">RateLimiting</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Limit</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Illuminate</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Foundation</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Support</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Providers</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">RouteServiceProvider</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ServiceProvider</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Illuminate</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Http</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Request</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Illuminate</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Support</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Facades</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">RateLimiter</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Illuminate</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Support</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Facades</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Route</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="10"/>
      <line no="11">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">RouteServiceProvider</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXTENDS">extends</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ServiceProvider</token>
      </line>
      <line no="12">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="13">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="14">
        <token name="T_DOC_COMMENT">     * The path to the "home" route for your application.</token>
      </line>
      <line no="15">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="16">
        <token name="T_DOC_COMMENT">     * This is used by Laravel authentication to redirect users after login.</token>
      </line>
      <line no="17">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="18">
        <token name="T_DOC_COMMENT">     * @var string</token>
      </line>
      <line no="19">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">HOME</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/cat'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="21"/>
      <line no="22">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="23">
        <token name="T_DOC_COMMENT">     * The controller namespace for the application.</token>
      </line>
      <line no="24">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="25">
        <token name="T_DOC_COMMENT">     * When present, controller route declarations will automatically be prefixed with this namespace.</token>
      </line>
      <line no="26">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="27">
        <token name="T_DOC_COMMENT">     * @var string|null</token>
      </line>
      <line no="28">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">// protected $namespace = 'App\\Http\\Controllers';</token>
      </line>
      <line no="30"/>
      <line no="31">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="32">
        <token name="T_DOC_COMMENT">     * Define your route model bindings, pattern filters, etc.</token>
      </line>
      <line no="33">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="34">
        <token name="T_DOC_COMMENT">     * @return void</token>
      </line>
      <line no="35">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">boot</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="38">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">configureRateLimiting</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="39"/>
      <line no="40">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">routes</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">Route</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">prefix</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'api'</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">                </token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">middleware</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'api'</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">                </token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">namespace</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">namespace</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">                </token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">group</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">base_path</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'routes/api.php'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="45"/>
      <line no="46">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">Route</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">middleware</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'web'</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">                </token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">namespace</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">namespace</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">                </token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">group</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">base_path</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'routes/web.php'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="49">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="51"/>
      <line no="52">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="53">
        <token name="T_DOC_COMMENT">     * Configure the rate limiters for the application.</token>
      </line>
      <line no="54">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="55">
        <token name="T_DOC_COMMENT">     * @return void</token>
      </line>
      <line no="56">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">configureRateLimiting</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">RateLimiter</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_FOR">for</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'api'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Limit</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">perMinute</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">60</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">by</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">optional</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">user</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">id</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">ip</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="62">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="63">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="64"/>
    </source>
  </file>
</phpunit>
